version: '3.8'

services:
  frontend:
    build:
      context: \shoes-and-blouse-frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    networks: 
    - my-network

  backend:
    build: 
      context: \
      dockerfile: Dockerfile
    environment: 
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=5022
      - ASPNETCORE_HTTPS_PORTS=7076
      - DOTNET_URLS=http://+:5022
    ports:
      - "7076:7076"
      - "5022:5022"
    volumes:
      - \shoesandblouse\ShoesAndBlouse.API\
    depends_on: 
      - postgres
      - redis
    networks: 
      - my-network

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_DB: ShoesAndBlouse
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
    volumes:
      - ./.containers/ShoesAndBlouse-db:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks: 
      - my-network
  
  redis:
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"
    networks:
      - my-network

networks:
  my-network:
    driver: bridge
  